@using Borg
@using Microsoft.AspNetCore.Routing
@model Borg.Infra.Relational.IPagedResult<Borg.Infra.DTO.Tidings>
@{
    var controller = Context.GetRouteValue("controller");
    Func<int, string> _generator = (i) => Url.Action("Index", "SimplePages", new { p = i });

    var headrs = Model.Records.SelectMany(x => x.Keys).Distinct();
}
@section contentheader
{
    <section class="content-header">
        <h1>
            @Content.Page.Title
            <small>@Content.Page.Subtitle</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Dashboard</li>
        </ol>
    </section>
}
<table>
    <tr>
        @foreach (var hdr in headrs)
        {
            <th>@hdr</th>
        }
    </tr>
    @foreach (var t in Model.Records)
    {
        <tr>
            @foreach (var hdr in headrs)
            {
                if (hdr.Equals("id", StringComparison.OrdinalIgnoreCase))
                {
                    <td>
                        <a asp-controller="SimplePages" asp-action="Index" asp-route-id="@t[hdr]">@t[hdr]</a>
                    </td>
                }
                else
                {
                    <td>@t[hdr]</td>
                }
            }
        </tr>
    }
</table>

<strong> body</strong>

<div>
    <ul style="float: left;" pagination model="@Model" query="@ViewContext.HttpContext.Request.QueryString" settings="@Pagination.PaginationInfo.DefaultPager" url-generator="@_generator"></ul>
</div>